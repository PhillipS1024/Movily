{"version":3,"sources":["components/layouts/Navbar.js","context.js","components/movie/Movie.js","components/movie/Movies.js","components/movie/Search.js","components/layouts/Index.js","components/movie/Details.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","react_default","a","createElement","className","Context","React","createContext","reducer","state","action","type","Object","objectSpread","movies","payload","heading","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","dispatch","setState","inherits","createClass","key","value","_this2","Axios","get","then","res","data","results","catch","err","console","log","props","children","Component","Consumer","Movie","movie","title","release_date","vote_average","Link","to","id","Movies","Fragment","map","movie_Movie","Search","movieTitle","findMoive","e","preventDefault","axios","onChange","defineProperty","target","name","onSubmit","bind","placeholder","Index","movie_Search","movie_Movies","Details","details","match","params","src","poster_path","alt","overview","App","context_Provider","BrowserRouter","layouts_Navbar","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8392743a.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n const Navbar = () => {\r\n  return (\r\n    <nav className=\"navbar navbar-dark bg-dark mb-5\">\r\n        <span className=\"navbar-brand mb-0 h1 mx-auto\">Movie Search</span>\r\n    </nav>\r\n  )\r\n}\r\n\r\n\r\nexport default Navbar;","import React, { Component } from 'react';\r\nimport Axios from 'axios';\r\n\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch(action.type) {\r\n    case 'SEARCH_MOVIES':\r\n      return {\r\n        ...state,\r\n        movies: action.payload,\r\n        heading: 'Results'\r\n      };\r\n      default:\r\n        return state;\r\n  }\r\n}\r\n\r\nexport class Provider extends Component {\r\n    state = {\r\n        movies: [],\r\n        heading: 'Upcoming Movies',\r\n        dispatch: action => this.setState(state => reducer(state, action))\r\n    }\r\n\r\n    componentDidMount() {\r\n        Axios.get('https://api.themoviedb.org/3/movie/upcoming?api_key=78034f8a323cee777281d4a0eaef7687')\r\n        .then(res => {\r\n            //console.log(res.data)\r\n            this.setState({movies: res.data.results})\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n          {this.props.children}\r\n      </Context.Provider>\r\n    )\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Movie = (props) => {\r\n    const{ movie } = props\r\n  return (\r\n    <div className=\"col-md-6\">\r\n    <div className=\"card mb-4 shadow-sm\">\r\n        <div className=\"card-body\">\r\n            <h5>{movie.title}</h5>\r\n            <p className=\"card-text\">\r\n                <strong><i className=\"fas fa-play\"></i>Showing</strong>: {movie.release_date}\r\n            </p>\r\n            <p className=\"card-text\">\r\n                <strong><i className=\"fas fa-star\"></i>Rating</strong>: {movie.vote_average}/10\r\n            </p>\r\n            <Link to={`details/movie/${movie.id}`} className=\"btn btn-dark btn-block\">\r\n                <i className=\"fas fa-chevron-right\"></i> Info\r\n            </Link>\r\n        </div>\r\n    </div>\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Movie;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport Movie from './Movie';\r\n\r\n\r\nclass Movies extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n          {value => {\r\n              const { movies, heading } = value;\r\n            return(\r\n                  <React.Fragment>\r\n                    <h3 className=\"text-center mb-4\">{heading}</h3>\r\n                  <div className=\"row\">\r\n                    {movies.map(movie => (\r\n                      <Movie key={movie.id}movie={movie} />\r\n                    ))}\r\n                  </div>\r\n                  </React.Fragment>\r\n                );\r\n              }\r\n              \r\n          }\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Movies;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Consumer } from '../../context';\r\n\r\nclass Search extends Component {\r\n    state = {\r\n        movieTitle: ''\r\n    };\r\n\r\n    findMoive = (dispatch, e) => {\r\n        e.preventDefault();\r\n        axios.get(`https://api.themoviedb.org/3/search/movie?query=${this.state.movieTitle}&api_key=78034f8a323cee777281d4a0eaef7687`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: 'SEARCH_MOVIES',\r\n                payload: res.data.results\r\n            })\r\n            this.setState({ movieTitle: '' })\r\n        }).catch(err => console.log(err))\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value})\r\n    }\r\n\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n          {value => {\r\n              const { dispatch } = value;\r\n              return (\r\n                  <div className=\"card card-body mb-4 p-4\">\r\n                    <h1 className=\"display-4 text-center\">\r\n                        <i className=\"fas fa-film\"></i> Find Your Movie\r\n                    </h1>\r\n                    <p className=\"lead text-center\">Any Movie Anytime</p>\r\n                    <form onSubmit={this.findMoive.bind(this, dispatch)}>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"text\" className=\"form-control form-control-lg\" placeholder=\"Find Your Movie...\" name=\"movieTitle\" value={this.state.movieTitle} onChange={this.onChange} />\r\n                        </div>\r\n                        <button className=\"btn btn-danger btn-lg btn-block mb-5\" type=\"submit\">Get Movies</button>\r\n                    </form>\r\n                  </div>\r\n              )\r\n          }}\r\n      </Consumer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import React from 'react';\r\nimport Movies from '../movie/Movies';\r\nimport Search from '../movie/Search';\r\n\r\nconst Index = () => {\r\n  return (\r\n   <React.Fragment>\r\n        <Search />\r\n       <Movies />\r\n   </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Index;\r\n","import React, { Component } from 'react'\r\nimport Axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Details extends Component {\r\n    state= {\r\n        details: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        Axios.get(`https://api.themoviedb.org/3/movie/${this.props.match.params.id}?api_key=78034f8a323cee777281d4a0eaef7687`)\r\n        .then(res => {\r\n            //console.log(res.data)\r\n            this.setState({ details: res.data })\r\n        }).catch(err => (console.log(err)))\r\n    }\r\n  render() {\r\n      const { details } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n          <Link to=\"/\" className=\"btn btn-dark btn-sm mb-4\">Go Back</Link>\r\n          <div className=\"card\">\r\n            <h5 className=\"card-header\">\r\n                {details.title}\r\n            </h5>\r\n            <div className=\"card-body\">\r\n                <img src={\"https://image.tmdb.org/t/p/w185\" + details.poster_path} alt=\"movie\" />\r\n                    <p className=\"card-text mt-5\">\r\n                        <strong>Overview:</strong> {details.overview}\r\n                    </p>\r\n                    <li className=\"list-group-item\">\r\n                        <strong>Rating:</strong> {details.vote_average}/10\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        <strong>Release Date:</strong> {details.release_date}\r\n                    </li>\r\n            </div>\r\n          </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default Details;","import React, { Component } from 'react';\nimport Navbar from './components/layouts/Navbar';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Index from './components/layouts/Index';\nimport Details from './components/movie/Details';\nimport './App.css';\nimport { Provider } from './context';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n      <Router>\n        <React.Fragment>\n          <Navbar />\n          <div className=\"container\">\n          <Switch>\n            <Route exact path=\"/\" component={Index} />\n            <Route exact path=\"/details/movie/:id\" component={Details}/>\n          </Switch>\n          </div>\n        </React.Fragment>\n      </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}